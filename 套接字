    套接字是一种双向通行接口，起源于管道。使用标准的unix文件描述符。支持调用read和write等底层文件编程库在socket中发送和接收数据。
    socket是进程间的一个连接。半相关描述符内容为：{协议，本地地址，本地端口}。 socket的完整相关描述符由以下内容组成：{协议，本地地址，本地端口，远程地址，远程端口}
    
    套接字的类型：
        1.流套接字(SOCK_STREAM)
            流套接字提供双向的（区别于单向）、可靠地（不丢失数据）、顺序的（数据顺序不会错）、不重复的（不会重复发送）、面向连接（发送数据是连接以后发送）的通信数据流.流套接字使用了TCP（The Transmission Control Protocol）,从而保证了数据传输的正确性。网络应用层中很多协议采用了流套接字，比如Telnet协议，HTTP协议等。
        2.数据报套接字（SOCK_DGRAM）
            数据报套接字定义了一种无连接服务，它提供独立的、无序的，不保证可靠性的通信数据流。该套接字在不建立连接前就把数据打包，再为每个包指定一个接收者的地址，每次都试图将该数据包传送到指定地点。包可能丢失、损坏、顺序变化等。数据报套接字使用了UDP（User Datagram Protocol）协议，该协议不维护一个连接，它只把数据达成一个包，再把远程的IP贴上去，然后就把这个包发送出去。使用UDP协议很有可能造成数据报丢失、数据报不按顺序到达或数据包内容错误等非预期现象。网络应用层中采用数据报套接字的协议有tftp协议和bootp协议等。
            UDP协议通常用于以下类型的系统中：（1）对传输数据的正确性、完整性和顺序性没有太多要求的系统。比如广播系统，后台将广播信息以UDP协议发送到每一个终端，但并不在乎终端是否能正确接收信息。（2）对消息进行严格校验的系统。比如某些互联网聊天程序，客户端发送一个UDP包后必须收到服务器应答才发送新的数据包，否则将重复发送，这样既充分利用了UDP的优势，又保证了传输数据的正确性。
        3.原始套接字（SOCK_RAW）
            原始套接字主要应用于底层协议的开发，进行底层的操作。它的功能最为强大，但是使用起来也最为复杂，因此除了一些特殊的应用，一般不建议使用原始套接字。
        
        
        
        
