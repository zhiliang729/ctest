IPC就是进程间通信（Interprocess Communication），广义上讲一切能使进程间相互交流的对象和方法都是IPC，比如文件、管道、socket等。狭义上讲IPC特指消息队列、信号量和共享内存三种对象，其中消息队列应用于不同进程只减少量数据的顺序共享，信号量应用于进程之间的同步与互斥的控制，共享内存则应用于进程之间大批量数据的随即共享访问。


采用消息队列通信比采用管道通信具有更多的灵活性，通信的进程不但没有血缘上的要求，也不需要进行同步处理。发送进程可以在任何时候写入消息，也可以在接收开始之前结束执行。而使用管道通信，无论是无名管道还是有名管道，通信的两个进程都必须是正在运行的进程。

消息队列是IPC对象的一种，与同样提供先进先出服务的管道相比，有如下特点：
    1.消息队列提供了消息数据的自动拆分功能，同时不能接受两次发送的消息。
    2.消息队列提供了不完全随机读取的服务。引入消息类型后，一个消息队列在逻辑上可以化身为多个不同消息类型的链表，用户可以自主选择接收某条逻辑链表上的消息，而不必依次接收队列的首条消息。
    3.消息队列提供了完全异步的读写服务。管道在使用时要求其读写两端必须同时打开，而消息队列没有这个限制，进程可以在任意时刻打开队列，也可以从队列中读取暂时并不存在的消息。

信号量
    进程间的通信不仅仅包括数据交流，也包括过程控制。比如同一时刻，进程A、B不能同事运行，或者进程D不能先于进程C运行等。操作系统中的生产者-消费者问题，正好体现了这种控制关系。生产者和消费者通过一个有界的缓冲区联系起来。它们之间同时存在着同步和互斥的关系，其中同步关系是指，禁止生产者向满的缓冲区输送产品，也禁止消费者从空的缓冲区中提取物品，互斥关系指的是生产者向缓冲区输送产品时，禁止消费者进入，同理消费者从缓冲区取走产品时，也禁止生产者进入。
    共享资源就是这么一个缓冲区，信号量则是一个可以用来控制进程存储共享资源的计数器，它可以是跟踪共享资源的生产和消费的计数器。也可以是协调资源的生产者和消费者之间的同步器，还可以是控制进程和消费进程的互斥开关。
    信号量在本质上是一组整型变量。是为了控制临界资源而产生的一个或一组计数器。
    
    信号量主要用于临界资源的读写控制和并发进程的同步与互斥控制中。
    
    
